# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|


  for i in 1..3 do
    config.vm.define "node-#{i}" do |node|
      node.vm.box = "generic/ubuntu2004"
      node.vm.hostname = "node-#{i}"

      node.vm.provider "vmware_workstation" do |vm|
      
        #Configure The Processors and memory
        vm.vmx["numcpus"] = "1"
        vm.vmx["memsize"] = "2048"

        # Configure the networking
        vm.vmx["ethernet0.connectiontype"] = "nat"
        vm.vmx["ethernet0.vnet"] = "/dev/vmnet2"
      end

      # Patch the Target
      node.vm.provision "shell", inline: "apt -y update && apt -y upgrade"

    end
  end

  for i in 1..1 do
  
    config.vm.define "ansible-#{i}" do |ansible_server|
      ansible_server.vm.box = "generic/ubuntu2004"
      ansible_server.vm.hostname = "ansible-#{i}"

      ansible_server.vm.provider "vmware_workstation" do |vm|

        # Configure cores and memory
        vm.vmx["numcpus"] = "2"
        vm.vmx["memsize"] = "2048"

        # Configure the networking
        vm.vmx["ethernet0.connectiontype"] = "nat"
        vm.vmx["ethernet0.vnet"] = "/dev/vmnet2"
      end

      ansible_server.vm.provision "shell", inline: "apt install -y ansible"

    end


  end









  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

end
